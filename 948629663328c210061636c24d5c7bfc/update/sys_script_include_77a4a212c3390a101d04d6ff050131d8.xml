<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_ipsu2_ips_perfor.IPSPerformanceEvaluation</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>IPSPerformanceEvaluation</name>
        <script><![CDATA[var IPSPerformanceEvaluation = Class.create();
IPSPerformanceEvaluation.prototype = {

    evaluations: [],


    initialize: function (settings) {
        this.settings = settings;
    },

    getUser: function () {
        var user = new GlideRecord('sys_user');
        user.get(gs.getUserID())

        return {
            sys_id: user.sys_id + '',
            name: user.name + '',
            title: user.title + '',
            leader: {
                name: user.manager.name + '',
                sys_id: user.manager.sys_id + '',
            }
        }
    },
    getCountEvaluations: function () {
        var evaluations = new GlideRecord('x_ipsu2_ips_perfor_performance_evaluation');
        evaluations.addQuery('assigned_to', gs.getUserID());
        evaluations.query();

        return evaluations.getRowCount();
    },

    getEvaluations: function (paginator) {
        var p = this.getPaginator(paginator)
        var records = [];
        var evaluations = new GlideRecord('x_ipsu2_ips_perfor_performance_evaluation');
        evaluations.addQuery('assigned_to', gs.getUserID());
        evaluations.orderByDesc('sys_created_on');
        evaluations.query();
        var count = 0;

        while (evaluations.next()) {
            if (count >= p.start && count < p.end) {
                records.push(this.getFields(evaluations))
            }
            count++;
        }

        return records;
    },

    getFields: function (ev) {
        var record = {
            due_date: ev.due_date.getDisplayValue(),
            state: {
                label: ev.state.getDisplayValue(),
                value: ev.state + '',
            },
            is_active: ev.is_active + '',
            download_self_assessment: ev.download_self_assessment + '',
            sys_id: ev.sys_id + '',
            number: ev.number + '',
            performance_evaluation: ev.performance_evaluation + '',
            leader: {
                sys_id: ev.leader.sys_id + '',
                name: ev.leader.name + '',
            }


        }

        return record
    },

    getPaginator: function (paginator) {
        var p = {};

        if (paginator.current_page <= 0) {
            p.start = -1;
            p.end = paginator.records_per_page
            return p;
        }

        p.start = paginator.current_page * paginator.records_per_page;
        p.end = ((paginator.current_page * paginator.records_per_page)) + paginator.records_per_page;
        return p;
    },

    createNewEvaluation: function (par) {
        var evaluation = new GlideRecord('x_ipsu2_ips_perfor_performance_evaluation');
        evaluation.initialize();
        evaluation.assigned_to = par.collaborator.sys_id;
        evaluation.leader = par.leader.sys_id;
        evaluation.performance_evaluation = par.evaluation;
        evaluation.state = 10;
        evaluation.is_active = true;
        evaluation.active = true;
        evaluation.insert();
        return evaluation.sys_id + '';
    },

    type: 'IPSPerformanceEvaluation'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>jorge.ortega</sys_created_by>
        <sys_created_on>2024-04-28 16:03:41</sys_created_on>
        <sys_id>77a4a212c3390a101d04d6ff050131d8</sys_id>
        <sys_mod_count>41</sys_mod_count>
        <sys_name>IPSPerformanceEvaluation</sys_name>
        <sys_package display_value="IPS Performance Assessments" source="x_ipsu2_ips_perfor">948629663328c210061636c24d5c7bfc</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="IPS Performance Assessments">948629663328c210061636c24d5c7bfc</sys_scope>
        <sys_update_name>sys_script_include_77a4a212c3390a101d04d6ff050131d8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-04-29 06:34:12</sys_updated_on>
    </sys_script_include>
</record_update>
